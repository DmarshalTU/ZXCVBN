# def sum(a: int, b: int) -> int: return a+b

# def ex1(a: int, b:int) -> int:
#     if a*b <= 1000:
#         return a*b
#     return a+b

# print(ex1(20,7))

# for n in range(0,100,1):
#     if n % 2 == 0:
#         print(ex1(n,10))

# for number in range(0,31,1):
#     if number == 0:
#         continue
#     if number % 15 == 0:
#         print("fizzbuzz")
#     elif number % 5 == 0:
#         print("buzz")
#     elif number % 3 == 0:
#         print("fizz")
#     else:
#        print(number)
#

# TODO: Создать переменные разных типов (строка, число, список, словарь) и вывести их.
# name = "Анна"  # строка
# age = 25       # число
# colors = ["красный", "синий"]  # список
# person = {"name": name, "age": age}  # словарь


# TODO: Написать функцию check_age(age)`, которая проверяет возраст и возвращает "ребенок" (если < 18), "взрослый" (18-65), "пенсионер" (65+).


# TODO: Создать список чисел от 1 до 10, вывести квадраты каждого числа через цикл for`.

# TODO: Написать функцию sum_list(numbers)`, которая возвращает сумму чисел списка.


# TODO: Создать словарь с данными человека (имя, возраст, город) и добавить в него новый ключ "страна".


# TODO: Написать функцию divide(a, b), которая возвращает результат деления a / b`, но обрабатывает деление на ноль.


# TODO: Создать файл test.txt`, записать в него строку "Привет, мир!", затем прочитать и вывести содержимое.


# TODO: Создать список квадратов чисел от 1 до 10 через генератор списка.

# TODO: Создать класс Personс атрибутамиnameиageи методомgreet()`, который выводит приветствие.


# TODO: Создать файл utils.pyс функциейis_even(num)`, затем импортировать и использовать ее в основном файле.


# TODO: Отправить GET-запрос к API https://jsonplaceholder.typicode.com/posts/1` и вывести результат.


# TODO: Настроить логирование в файл app.log` с сообщением "Программа запущена".


# TODO: Создать виртуальное окружение, установить библиотеку requests` и написать скрипт, который ее использует.


# TODO: Написать тест для функции sum_list()с использованиемunittest`.


# TODO: Создать программу для учета задач (добавление, вывод списка, сохранение в файл).
